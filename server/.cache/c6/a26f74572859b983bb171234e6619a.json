{"id":"../node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js","dependencies":[{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/bilal/Projects/kart-racer/server/package.json","includedInParent":true,"mtime":1610848218647},{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/package.json","includedInParent":true,"mtime":1602017675708},{"name":"graphql","loc":{"line":2,"column":24},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql/index.mjs"},{"name":"deprecated-decorator","loc":{"line":3,"column":37},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/deprecated-decorator/bld/index.js"},{"name":".","loc":{"line":4,"column":17},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/generate/attachConnectorsToContext.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/generate/index.js"}],"generated":{"js":"Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar deprecated_decorator_1 = require(\"deprecated-decorator\");\nvar _1 = require(\".\");\n// takes a GraphQL-JS schema and an object of connectors, then attaches\n// the connectors to the context by wrapping each query or mutation resolve\n// function with a function that attaches connectors if they don't exist.\n// attaches connectors only once to make sure they are singletons\nvar attachConnectorsToContext = deprecated_decorator_1.deprecated({\n    version: '0.7.0',\n    url: 'https://github.com/apollostack/graphql-tools/issues/140',\n}, function (schema, connectors) {\n    if (!schema || !(schema instanceof graphql_1.GraphQLSchema)) {\n        throw new Error('schema must be an instance of GraphQLSchema. ' +\n            'This error could be caused by installing more than one version of GraphQL-JS');\n    }\n    if (typeof connectors !== 'object') {\n        var connectorType = typeof connectors;\n        throw new Error(\"Expected connectors to be of type object, got \" + connectorType);\n    }\n    if (Object.keys(connectors).length === 0) {\n        throw new Error('Expected connectors to not be an empty object');\n    }\n    if (Array.isArray(connectors)) {\n        throw new Error('Expected connectors to be of type object, got Array');\n    }\n    if (schema['_apolloConnectorsAttached']) {\n        throw new Error('Connectors already attached to context, cannot attach more than once');\n    }\n    schema['_apolloConnectorsAttached'] = true;\n    var attachconnectorFn = function (root, args, ctx) {\n        if (typeof ctx !== 'object') {\n            // if in any way possible, we should throw an error when the attachconnectors\n            // function is called, not when a query is executed.\n            var contextType = typeof ctx;\n            throw new Error(\"Cannot attach connector because context is not an object: \" + contextType);\n        }\n        if (typeof ctx.connectors === 'undefined') {\n            ctx.connectors = {};\n        }\n        Object.keys(connectors).forEach(function (connectorName) {\n            var connector = connectors[connectorName];\n            if (!!connector.prototype) {\n                ctx.connectors[connectorName] = new connector(ctx);\n            }\n            else {\n                throw new Error(\"Connector must be a function or an class\");\n            }\n        });\n        return root;\n    };\n    _1.addSchemaLevelResolveFunction(schema, attachconnectorFn);\n});\nexports.default = attachConnectorsToContext;\n"},"sourceMaps":{"js":{"version":3,"file":"attachConnectorsToContext.js","sourceRoot":"","sources":["../../src/generate/attachConnectorsToContext.ts"],"names":[],"mappings":";AAAA,mCAA8D;AAE9D,6DAAkD;AAIlD,sBAAkD;AAElD,uEAAuE;AACvE,2EAA2E;AAC3E,yEAAyE;AACzE,iEAAiE;AACjE,IAAM,yBAAyB,GAAG,iCAAU,CAC1C;IACE,OAAO,EAAE,OAAO;IAChB,GAAG,EAAE,yDAAyD;CAC/D,EACD,UAAS,MAAqB,EAAE,UAAuB;IACrD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,YAAY,uBAAa,CAAC,EAAE;QACjD,MAAM,IAAI,KAAK,CACb,+CAA+C;YAC7C,8EAA8E,CACjF,CAAC;KACH;IAED,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,IAAM,aAAa,GAAG,OAAO,UAAU,CAAC;QACxC,MAAM,IAAI,KAAK,CACb,mDAAiD,aAAe,CACjE,CAAC;KACH;IACD,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACxC,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAClE;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;KACxE;IACD,IAAI,MAAM,CAAC,2BAA2B,CAAC,EAAE;QACvC,MAAM,IAAI,KAAK,CACb,sEAAsE,CACvE,CAAC;KACH;IACD,MAAM,CAAC,2BAA2B,CAAC,GAAG,IAAI,CAAC;IAC3C,IAAM,iBAAiB,GAAmC,UACxD,IAAS,EACT,IAA4B,EAC5B,GAAQ;QAER,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,6EAA6E;YAC7E,oDAAoD;YACpD,IAAM,WAAW,GAAG,OAAO,GAAG,CAAC;YAC/B,MAAM,IAAI,KAAK,CACb,+DAA6D,WAAa,CAC3E,CAAC;SACH;QACD,IAAI,OAAO,GAAG,CAAC,UAAU,KAAK,WAAW,EAAE;YACzC,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC;SACrB;QACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,aAAa;YAC3C,IAAI,SAAS,GAAe,UAAU,CAAC,aAAa,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,EAAE;gBACzB,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,IAAoB,SAAU,CAAC,GAAG,CAAC,CAAC;aACrE;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;IACF,gCAA6B,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAC3D,CAAC,CACF,CAAC;AAEF,kBAAe,yBAAyB,CAAC","sourcesContent":[null]}},"error":null,"hash":"9422e6a47d2da2fc95efcc9577f473dc","cacheData":{"env":{}}}