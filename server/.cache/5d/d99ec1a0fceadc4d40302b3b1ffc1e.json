{"id":"../node_modules/graphql-tools/dist/transforms/FilterToSchema.js","dependencies":[{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/FilterToSchema.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/bilal/Projects/kart-racer/server/package.json","includedInParent":true,"mtime":1610848218647},{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/package.json","includedInParent":true,"mtime":1602017675708},{"name":"graphql","loc":{"line":20,"column":24},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/FilterToSchema.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql/index.mjs"},{"name":"../implementsAbstractType","loc":{"line":21,"column":39},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/FilterToSchema.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/implementsAbstractType.js"}],"generated":{"js":"var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar implementsAbstractType_1 = require(\"../implementsAbstractType\");\nvar FilterToSchema = /** @class */ (function () {\n    function FilterToSchema(targetSchema) {\n        this.targetSchema = targetSchema;\n    }\n    FilterToSchema.prototype.transformRequest = function (originalRequest) {\n        var document = filterDocumentToSchema(this.targetSchema, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return FilterToSchema;\n}());\nexports.default = FilterToSchema;\nfunction filterDocumentToSchema(targetSchema, document) {\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var usedFragments = [];\n    var newOperations = [];\n    var newFragments = [];\n    var validFragments = fragments.filter(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        return Boolean(targetSchema.getType(typeName));\n    });\n    var validFragmentsWithType = {};\n    validFragments.forEach(function (fragment) {\n        var typeName = fragment.typeCondition.name.value;\n        var type = targetSchema.getType(typeName);\n        validFragmentsWithType[fragment.name.value] = type;\n    });\n    var fragmentSet = Object.create(null);\n    operations.forEach(function (operation) {\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet), selectionSet = _a.selectionSet, operationUsedFragments = _a.usedFragments, operationUsedVariables = _a.usedVariables;\n        usedFragments = union(usedFragments, operationUsedFragments);\n        var _b = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments), collectedUsedVariables = _b.usedVariables, collectedNewFragments = _b.newFragments, collectedFragmentSet = _b.fragmentSet;\n        var fullUsedVariables = union(operationUsedVariables, collectedUsedVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        var variableDefinitions = operation.variableDefinitions.filter(function (variable) {\n            return fullUsedVariables.indexOf(variable.variable.name.value) !== -1;\n        });\n        newOperations.push({\n            kind: graphql_1.Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions: variableDefinitions,\n            selectionSet: selectionSet,\n        });\n    });\n    return {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: __spreadArrays(newOperations, newFragments),\n    };\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    var usedVariables = [];\n    var newFragments = [];\n    var _loop_1 = function () {\n        var nextFragmentName = usedFragments.pop();\n        var fragment = validFragments.find(function (fr) { return fr.name.value === nextFragmentName; });\n        if (fragment) {\n            var name_1 = nextFragmentName;\n            var typeName = fragment.typeCondition.name.value;\n            var type = targetSchema.getType(typeName);\n            var _a = filterSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet), selectionSet = _a.selectionSet, fragmentUsedFragments = _a.usedFragments, fragmentUsedVariables = _a.usedVariables;\n            usedFragments = union(usedFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (!fragmentSet[name_1]) {\n                fragmentSet[name_1] = true;\n                newFragments.push({\n                    kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: name_1,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet: selectionSet,\n                });\n            }\n        }\n    };\n    while (usedFragments.length !== 0) {\n        _loop_1();\n    }\n    return {\n        usedVariables: usedVariables,\n        newFragments: newFragments,\n        fragmentSet: fragmentSet,\n    };\n}\nfunction filterSelectionSet(schema, type, validFragments, selectionSet) {\n    var _a;\n    var usedFragments = [];\n    var usedVariables = [];\n    var typeStack = [type];\n    // Should be rewritten using visitWithSchema\n    var filteredSelectionSet = graphql_1.visit(selectionSet, (_a = {},\n        _a[graphql_1.Kind.FIELD] = {\n            enter: function (node) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                if (parentType instanceof graphql_1.GraphQLObjectType ||\n                    parentType instanceof graphql_1.GraphQLInterfaceType) {\n                    var fields = parentType.getFields();\n                    var field = node.name.value === '__typename'\n                        ? graphql_1.TypeNameMetaFieldDef\n                        : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    else {\n                        typeStack.push(field.type);\n                    }\n                    var argNames_1 = (field.args || []).map(function (arg) { return arg.name; });\n                    if (node.arguments) {\n                        var args = node.arguments.filter(function (arg) {\n                            return argNames_1.indexOf(arg.name.value) !== -1;\n                        });\n                        if (args.length !== node.arguments.length) {\n                            return __assign(__assign({}, node), { arguments: args });\n                        }\n                    }\n                }\n                else if (parentType instanceof graphql_1.GraphQLUnionType &&\n                    node.name.value === '__typename') {\n                    typeStack.push(graphql_1.TypeNameMetaFieldDef.type);\n                }\n            },\n            leave: function (node) {\n                var _a;\n                var currentType = typeStack.pop();\n                var resolvedType = resolveType(currentType);\n                if (resolvedType instanceof graphql_1.GraphQLObjectType ||\n                    resolvedType instanceof graphql_1.GraphQLInterfaceType) {\n                    var selections = node.selectionSet && node.selectionSet.selections || null;\n                    if (!selections || selections.length === 0) {\n                        // need to remove any added variables. Is there a better way to do this?\n                        graphql_1.visit(node, (_a = {},\n                            _a[graphql_1.Kind.VARIABLE] = function (variableNode) {\n                                var index = usedVariables.indexOf(variableNode.name.value);\n                                if (index !== -1) {\n                                    usedVariables.splice(index, 1);\n                                }\n                            },\n                            _a));\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[graphql_1.Kind.FRAGMENT_SPREAD] = function (node) {\n            if (node.name.value in validFragments) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                var innerType = validFragments[node.name.value];\n                if (!implementsAbstractType_1.default(schema, parentType, innerType)) {\n                    return null;\n                }\n                else {\n                    usedFragments.push(node.name.value);\n                    return;\n                }\n            }\n            else {\n                return null;\n            }\n        },\n        _a[graphql_1.Kind.INLINE_FRAGMENT] = {\n            enter: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (implementsAbstractType_1.default(schema, parentType, innerType)) {\n                        typeStack.push(innerType);\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            leave: function (node) {\n                typeStack.pop();\n            },\n        },\n        _a[graphql_1.Kind.VARIABLE] = function (node) {\n            usedVariables.push(node.name.value);\n        },\n        _a));\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments: usedFragments,\n        usedVariables: usedVariables,\n    };\n}\nfunction resolveType(type) {\n    var lastType = type;\n    while (lastType instanceof graphql_1.GraphQLNonNull ||\n        lastType instanceof graphql_1.GraphQLList) {\n        lastType = lastType.ofType;\n    }\n    return lastType;\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var cache = {};\n    var result = [];\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            if (!cache[item]) {\n                cache[item] = true;\n                result.push(item);\n            }\n        });\n    });\n    return result;\n}\n"},"sourceMaps":{"js":{"version":3,"file":"FilterToSchema.js","sourceRoot":"","sources":["../../src/transforms/FilterToSchema.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"6559ce8549369e6896f6b63be1cf469a","cacheData":{"env":{}}}