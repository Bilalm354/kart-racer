{"id":"../node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js","dependencies":[{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/bilal/Projects/kart-racer/server/package.json","includedInParent":true,"mtime":1610848218647},{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/package.json","includedInParent":true,"mtime":1602017675708},{"name":"graphql","loc":{"line":20,"column":24},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql/index.mjs"},{"name":"../implementsAbstractType","loc":{"line":21,"column":39},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/ExpandAbstractTypes.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/implementsAbstractType.js"}],"generated":{"js":"var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar implementsAbstractType_1 = require(\"../implementsAbstractType\");\nvar ExpandAbstractTypes = /** @class */ (function () {\n    function ExpandAbstractTypes(transformedSchema, targetSchema) {\n        this.targetSchema = targetSchema;\n        this.mapping = extractPossibleTypes(transformedSchema, targetSchema);\n        this.reverseMapping = flipMapping(this.mapping);\n    }\n    ExpandAbstractTypes.prototype.transformRequest = function (originalRequest) {\n        var document = expandAbstractTypes(this.targetSchema, this.mapping, this.reverseMapping, originalRequest.document);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return ExpandAbstractTypes;\n}());\nexports.default = ExpandAbstractTypes;\nfunction extractPossibleTypes(transformedSchema, targetSchema) {\n    var typeMap = transformedSchema.getTypeMap();\n    var mapping = {};\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (graphql_1.isAbstractType(type)) {\n            var targetType = targetSchema.getType(typeName);\n            if (!graphql_1.isAbstractType(targetType)) {\n                var implementations = transformedSchema.getPossibleTypes(type) || [];\n                mapping[typeName] = implementations\n                    .filter(function (impl) { return targetSchema.getType(impl.name); })\n                    .map(function (impl) { return impl.name; });\n            }\n        }\n    });\n    return mapping;\n}\nfunction flipMapping(mapping) {\n    var result = {};\n    Object.keys(mapping).forEach(function (typeName) {\n        var toTypeNames = mapping[typeName];\n        toTypeNames.forEach(function (toTypeName) {\n            if (!result[toTypeName]) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        });\n    });\n    return result;\n}\nfunction expandAbstractTypes(targetSchema, mapping, reverseMapping, document) {\n    var _a;\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var existingFragmentNames = fragments.map(function (fragment) { return fragment.name.value; });\n    var fragmentCounter = 0;\n    var generateFragmentName = function (typeName) {\n        var fragmentName;\n        do {\n            fragmentName = \"_\" + typeName + \"_Fragment\" + fragmentCounter;\n            fragmentCounter++;\n        } while (existingFragmentNames.indexOf(fragmentName) !== -1);\n        return fragmentName;\n    };\n    var newFragments = [];\n    var fragmentReplacements = {};\n    fragments.forEach(function (fragment) {\n        newFragments.push(fragment);\n        var possibleTypes = mapping[fragment.typeCondition.name.value];\n        if (possibleTypes) {\n            fragmentReplacements[fragment.name.value] = [];\n            possibleTypes.forEach(function (possibleTypeName) {\n                var name = generateFragmentName(possibleTypeName);\n                existingFragmentNames.push(name);\n                var newFragment = {\n                    kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                };\n                newFragments.push(newFragment);\n                fragmentReplacements[fragment.name.value].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            });\n        }\n    });\n    var newDocument = __assign(__assign({}, document), { definitions: __spreadArrays(operations, newFragments) });\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(newDocument, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var newSelections = __spreadArrays(node.selections);\n            var parentType = graphql_1.getNamedType(typeInfo.getParentType());\n            node.selections.forEach(function (selection) {\n                if (selection.kind === graphql_1.Kind.INLINE_FRAGMENT) {\n                    var possibleTypes = mapping[selection.typeCondition.name.value];\n                    if (possibleTypes) {\n                        possibleTypes.forEach(function (possibleType) {\n                            if (implementsAbstractType_1.default(targetSchema, parentType, targetSchema.getType(possibleType))) {\n                                newSelections.push({\n                                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                                    typeCondition: {\n                                        kind: graphql_1.Kind.NAMED_TYPE,\n                                        name: {\n                                            kind: graphql_1.Kind.NAME,\n                                            value: possibleType,\n                                        },\n                                    },\n                                    selectionSet: selection.selectionSet,\n                                });\n                            }\n                        });\n                    }\n                }\n                else if (selection.kind === graphql_1.Kind.FRAGMENT_SPREAD) {\n                    var fragmentName = selection.name.value;\n                    var replacements = fragmentReplacements[fragmentName];\n                    if (replacements) {\n                        replacements.forEach(function (replacement) {\n                            var typeName = replacement.typeName;\n                            if (implementsAbstractType_1.default(targetSchema, parentType, targetSchema.getType(typeName))) {\n                                newSelections.push({\n                                    kind: graphql_1.Kind.FRAGMENT_SPREAD,\n                                    name: {\n                                        kind: graphql_1.Kind.NAME,\n                                        value: replacement.fragmentName,\n                                    },\n                                });\n                            }\n                        });\n                    }\n                }\n            });\n            if (parentType && reverseMapping[parentType.name]) {\n                newSelections.push({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (newSelections.length !== node.selections.length) {\n                return __assign(__assign({}, node), { selections: newSelections });\n            }\n        },\n        _a)));\n}\n"},"sourceMaps":{"js":{"version":3,"file":"ExpandAbstractTypes.js","sourceRoot":"","sources":["../../src/transforms/ExpandAbstractTypes.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"f5ce5883637d8ae67d0f350d0baaeabf","cacheData":{"env":{}}}