{"id":"../node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js","dependencies":[{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/bilal/Projects/kart-racer/server/package.json","includedInParent":true,"mtime":1610848218647},{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/package.json","includedInParent":true,"mtime":1602017675708},{"name":"graphql","loc":{"line":13,"column":24},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/ReplaceFieldWithFragment.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql/index.mjs"}],"generated":{"js":"var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar ReplaceFieldWithFragment = /** @class */ (function () {\n    function ReplaceFieldWithFragment(targetSchema, fragments) {\n        this.targetSchema = targetSchema;\n        this.mapping = {};\n        for (var _i = 0, fragments_1 = fragments; _i < fragments_1.length; _i++) {\n            var _a = fragments_1[_i], field = _a.field, fragment = _a.fragment;\n            var parsedFragment = parseFragmentToInlineFragment(fragment);\n            var actualTypeName = parsedFragment.typeCondition.name.value;\n            this.mapping[actualTypeName] = this.mapping[actualTypeName] || {};\n            if (this.mapping[actualTypeName][field]) {\n                this.mapping[actualTypeName][field].push(parsedFragment);\n            }\n            else {\n                this.mapping[actualTypeName][field] = [parsedFragment];\n            }\n        }\n    }\n    ReplaceFieldWithFragment.prototype.transformRequest = function (originalRequest) {\n        var document = replaceFieldsWithFragments(this.targetSchema, originalRequest.document, this.mapping);\n        return __assign(__assign({}, originalRequest), { document: document });\n    };\n    return ReplaceFieldWithFragment;\n}());\nexports.default = ReplaceFieldWithFragment;\nfunction replaceFieldsWithFragments(targetSchema, document, mapping) {\n    var _a;\n    var typeInfo = new graphql_1.TypeInfo(targetSchema);\n    return graphql_1.visit(document, graphql_1.visitWithTypeInfo(typeInfo, (_a = {},\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = typeInfo.getParentType();\n            if (parentType) {\n                var parentTypeName_1 = parentType.name;\n                var selections_1 = node.selections;\n                if (mapping[parentTypeName_1]) {\n                    node.selections.forEach(function (selection) {\n                        if (selection.kind === graphql_1.Kind.FIELD) {\n                            var name_1 = selection.name.value;\n                            var fragments = mapping[parentTypeName_1][name_1];\n                            if (fragments && fragments.length > 0) {\n                                var fragment = concatInlineFragments(parentTypeName_1, fragments);\n                                selections_1 = selections_1.concat(fragment);\n                            }\n                        }\n                    });\n                }\n                if (selections_1 !== node.selections) {\n                    return __assign(__assign({}, node), { selections: selections_1 });\n                }\n            }\n        },\n        _a)));\n}\nfunction parseFragmentToInlineFragment(definitions) {\n    if (definitions.trim().startsWith('fragment')) {\n        var document_1 = graphql_1.parse(definitions);\n        for (var _i = 0, _a = document_1.definitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            if (definition.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n                return {\n                    kind: graphql_1.Kind.INLINE_FRAGMENT,\n                    typeCondition: definition.typeCondition,\n                    selectionSet: definition.selectionSet,\n                };\n            }\n        }\n    }\n    var query = graphql_1.parse(\"{\" + definitions + \"}\")\n        .definitions[0];\n    for (var _b = 0, _c = query.selectionSet.selections; _b < _c.length; _b++) {\n        var selection = _c[_b];\n        if (selection.kind === graphql_1.Kind.INLINE_FRAGMENT) {\n            return selection;\n        }\n    }\n    throw new Error('Could not parse fragment');\n}\nfunction concatInlineFragments(type, fragments) {\n    var fragmentSelections = fragments.reduce(function (selections, fragment) {\n        return selections.concat(fragment.selectionSet.selections);\n    }, []);\n    var deduplicatedFragmentSelection = deduplicateSelection(fragmentSelections);\n    return {\n        kind: graphql_1.Kind.INLINE_FRAGMENT,\n        typeCondition: {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type,\n            },\n        },\n        selectionSet: {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: deduplicatedFragmentSelection,\n        },\n    };\n}\nfunction deduplicateSelection(nodes) {\n    var selectionMap = nodes.reduce(function (map, node) {\n        var _a, _b, _c;\n        switch (node.kind) {\n            case 'Field': {\n                if (node.alias) {\n                    if (map.hasOwnProperty(node.alias.value)) {\n                        return map;\n                    }\n                    else {\n                        return __assign(__assign({}, map), (_a = {}, _a[node.alias.value] = node, _a));\n                    }\n                }\n                else {\n                    if (map.hasOwnProperty(node.name.value)) {\n                        return map;\n                    }\n                    else {\n                        return __assign(__assign({}, map), (_b = {}, _b[node.name.value] = node, _b));\n                    }\n                }\n            }\n            case 'FragmentSpread': {\n                if (map.hasOwnProperty(node.name.value)) {\n                    return map;\n                }\n                else {\n                    return __assign(__assign({}, map), (_c = {}, _c[node.name.value] = node, _c));\n                }\n            }\n            case 'InlineFragment': {\n                if (map.__fragment) {\n                    var fragment = map.__fragment;\n                    return __assign(__assign({}, map), { __fragment: concatInlineFragments(fragment.typeCondition.name.value, [fragment, node]) });\n                }\n                else {\n                    return __assign(__assign({}, map), { __fragment: node });\n                }\n            }\n            default: {\n                return map;\n            }\n        }\n    }, {});\n    var selection = Object.keys(selectionMap).reduce(function (selectionList, node) { return selectionList.concat(selectionMap[node]); }, []);\n    return selection;\n}\n"},"sourceMaps":{"js":{"version":3,"file":"ReplaceFieldWithFragment.js","sourceRoot":"","sources":["../../src/transforms/ReplaceFieldWithFragment.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"2fafad006aced3e3f8133b4f900269a8","cacheData":{"env":{}}}