{"id":"../node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js","dependencies":[{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/bilal/Projects/kart-racer/server/package.json","includedInParent":true,"mtime":1610848218647},{"name":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/package.json","includedInParent":true,"mtime":1602017675708},{"name":"graphql","loc":{"line":20,"column":24},"parent":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql-tools/dist/transforms/AddArgumentsAsVariables.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/graphql/index.mjs"}],"generated":{"js":"var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar AddArgumentsAsVariablesTransform = /** @class */ (function () {\n    function AddArgumentsAsVariablesTransform(schema, args) {\n        this.schema = schema;\n        this.args = args;\n    }\n    AddArgumentsAsVariablesTransform.prototype.transformRequest = function (originalRequest) {\n        var _a = addVariablesToRootField(this.schema, originalRequest.document, this.args), document = _a.document, newVariables = _a.newVariables;\n        var variables = __assign(__assign({}, originalRequest.variables), newVariables);\n        return {\n            document: document,\n            variables: variables,\n        };\n    };\n    return AddArgumentsAsVariablesTransform;\n}());\nexports.default = AddArgumentsAsVariablesTransform;\nfunction addVariablesToRootField(targetSchema, document, args) {\n    var operations = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.OPERATION_DEFINITION; });\n    var fragments = document.definitions.filter(function (def) { return def.kind === graphql_1.Kind.FRAGMENT_DEFINITION; });\n    var variableNames = {};\n    var newOperations = operations.map(function (operation) {\n        var existingVariables = operation.variableDefinitions.map(function (variableDefinition) {\n            return variableDefinition.variable.name.value;\n        });\n        var variableCounter = 0;\n        var variables = {};\n        var generateVariableName = function (argName) {\n            var varName;\n            do {\n                varName = \"_v\" + variableCounter + \"_\" + argName;\n                variableCounter++;\n            } while (existingVariables.indexOf(varName) !== -1);\n            return varName;\n        };\n        var type;\n        if (operation.operation === 'subscription') {\n            type = targetSchema.getSubscriptionType();\n        }\n        else if (operation.operation === 'mutation') {\n            type = targetSchema.getMutationType();\n        }\n        else {\n            type = targetSchema.getQueryType();\n        }\n        var newSelectionSet = [];\n        operation.selectionSet.selections.forEach(function (selection) {\n            if (selection.kind === graphql_1.Kind.FIELD) {\n                var newArgs_1 = {};\n                selection.arguments.forEach(function (argument) {\n                    newArgs_1[argument.name.value] = argument;\n                });\n                var name_1 = selection.name.value;\n                var field = type.getFields()[name_1];\n                field.args.forEach(function (argument) {\n                    if (argument.name in args) {\n                        var variableName = generateVariableName(argument.name);\n                        variableNames[argument.name] = variableName;\n                        newArgs_1[argument.name] = {\n                            kind: graphql_1.Kind.ARGUMENT,\n                            name: {\n                                kind: graphql_1.Kind.NAME,\n                                value: argument.name,\n                            },\n                            value: {\n                                kind: graphql_1.Kind.VARIABLE,\n                                name: {\n                                    kind: graphql_1.Kind.NAME,\n                                    value: variableName,\n                                },\n                            },\n                        };\n                        existingVariables.push(variableName);\n                        variables[variableName] = {\n                            kind: graphql_1.Kind.VARIABLE_DEFINITION,\n                            variable: {\n                                kind: graphql_1.Kind.VARIABLE,\n                                name: {\n                                    kind: graphql_1.Kind.NAME,\n                                    value: variableName,\n                                },\n                            },\n                            type: typeToAst(argument.type),\n                        };\n                    }\n                });\n                newSelectionSet.push(__assign(__assign({}, selection), { arguments: Object.keys(newArgs_1).map(function (argName) { return newArgs_1[argName]; }) }));\n            }\n            else {\n                newSelectionSet.push(selection);\n            }\n        });\n        return __assign(__assign({}, operation), { variableDefinitions: operation.variableDefinitions.concat(Object.keys(variables).map(function (varName) { return variables[varName]; })), selectionSet: {\n                kind: graphql_1.Kind.SELECTION_SET,\n                selections: newSelectionSet,\n            } });\n    });\n    var newVariables = {};\n    Object.keys(variableNames).forEach(function (name) {\n        newVariables[variableNames[name]] = args[name];\n    });\n    return {\n        document: __assign(__assign({}, document), { definitions: __spreadArrays(newOperations, fragments) }),\n        newVariables: newVariables,\n    };\n}\nfunction typeToAst(type) {\n    if (type instanceof graphql_1.GraphQLNonNull) {\n        var innerType = typeToAst(type.ofType);\n        if (innerType.kind === graphql_1.Kind.LIST_TYPE ||\n            innerType.kind === graphql_1.Kind.NAMED_TYPE) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                type: innerType,\n            };\n        }\n        else {\n            throw new Error('Incorrent inner non-null type');\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLList) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: typeToAst(type.ofType),\n        };\n    }\n    else {\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.toString(),\n            },\n        };\n    }\n}\n"},"sourceMaps":{"js":{"version":3,"file":"AddArgumentsAsVariables.js","sourceRoot":"","sources":["../../src/transforms/AddArgumentsAsVariables.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"e5ee158dcc480ed5ae96805efaa09f29","cacheData":{"env":{}}}