{"id":"typeDefs.js","dependencies":[{"name":"/Users/bilal/Projects/kart-racer/server/package.json","includedInParent":true,"mtime":1610848218647},{"name":"apollo-server","loc":{"line":1,"column":20},"parent":"/Users/bilal/Projects/kart-racer/server/src/typeDefs.js","resolved":"/Users/bilal/Projects/kart-racer/server/node_modules/apollo-server/dist/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeDefs = void 0;\n\nvar _apolloServer = require(\"apollo-server\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\ntype Score {\\n  name: String\\n  time: String\\n}\\n\\ntype Query {\\n  scores: [Score]\\n}\\n\\ntype Mutation {\\n  addScore(name: String!, time: String!): Score!\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar typeDefs = (0, _apolloServer.gql)(_templateObject());\nexports.typeDefs = typeDefs;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"typeDefs.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"typeDefs.js","original":{"line":3,"column":7}},{"name":"typeDefs","generated":{"line":22,"column":4},"source":"typeDefs.js","original":{"line":3,"column":13}},{"generated":{"line":22,"column":12},"source":"typeDefs.js","original":{"line":3,"column":21}},{"name":"gql","generated":{"line":22,"column":19},"source":"typeDefs.js","original":{"line":3,"column":24}},{"generated":{"line":22,"column":36},"source":"typeDefs.js","original":{"line":3,"column":21}},{"generated":{"line":22,"column":56},"source":"typeDefs.js","original":{"line":3,"column":7}}],"sources":{"typeDefs.js":"import { gql } from 'apollo-server';\n\nexport const typeDefs = gql`\ntype Score {\n  name: String\n  time: String\n}\n\ntype Query {\n  scores: [Score]\n}\n\ntype Mutation {\n  addScore(name: String!, time: String!): Score!\n}\n`;"},"lineCount":null}},"error":null,"hash":"800d22001f4e1ebfbbb25a1a54c2f567","cacheData":{"env":{}}}